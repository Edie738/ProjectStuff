# -*- coding: utf-8 -*-
"""NPK predictionAI .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rnIUYfWhvsEK_upE1nju1r6mYEi5IEBv
"""

import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

from sklearn.tree  import DecisionTreeRegressor

from sklearn.model_selection import GridSearchCV
from sklearn.neighbors import KNeighborsRegressor

ata = pd.read_csv('https://raw.githubusercontent.com/Edie738/ProjectStuff/master/Soil-Analysis-and-Yield-Prediction-master/Soil-Analysis-and-Yield-Prediction-master/TestingAndTrainingDataSet.csv?token=AM5B2MY2HSDQ53WI5HOLWAS5PO4M4')

Data

import matplotlib.pyplot as plt

plt.figure(figsize=(15,10))
sns.heatmap(Data.corr(), annot = True)

X = Data.drop(['name','Aval N','Aval P','Aval K','mg kg','Cu','m..Fe','mg..Mn','S'], axis =1)
y1 = Data['Aval N']
y2 = Data['Aval P']
y3 = Data['Aval K']

import tensorflow as tf

X_train, X_test, y1_train, y1_test = train_test_split(X,y1, test_size = 0.2, random_state = 0)

y2_train, y2_test = train_test_split(y2, test_size = 0.2, random_state = 0)

y3_train, y3_test = train_test_split(y3, test_size = 0.2, random_state = 0)

modelA1 = LinearRegression()
modelA2 = LinearRegression()
modelA3 = LinearRegression()

modelA1.fit(X_train, y1_train)

modelA2.fit(X_train, y2_train)

modelA3.fit(X_train, y3_train)

L1_pred = modelA1.predict(X_test)
L2_pred = modelA2.predict(X_test)
L3_pred = modelA3.predict(X_test)

L1_pred

L2_pred

L3_pred

a= modelA1.score(X_test, y1_test)
b= modelA2.score(X_test, y2_test)
c= modelA3.score(X_test, y3_test)
print('Score for Aval N is {}, Score for Aval P is {}, Score for Aval K is{} '.format(a, b, c))